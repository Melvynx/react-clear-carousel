{"version":3,"sources":["../../src/useSimpleCarousel.tsx","../../src/useSimpleCarouselStyles.tsx","../../src/CarouselWrapper.tsx","../../src/utils.ts","../../src/CarouselElement.tsx","../../src/CarouselActions.tsx","exemples/datas.ts","exemples/InteractiveExempleForm.tsx","exemples/InteractiveExemple.tsx","exemples/getInteractiveExempleCode.tsx","exemples/ImageExemple.tsx","exemples/ExempleWrapper.tsx","logo/GithubLogo.tsx","logo/NpmLogo.tsx","Exemples.tsx","App.tsx","index.tsx"],"names":["useSimpleCarousel","listLength","size","reverse","transition","React","currentSlide","setCurrentSlide","nextSlide","p","prevSlide","setSlide","slide","classes","useSimpleCarouselStyles","uniqueId","Math","style","document","card","flexBox","root","currentStyle","currentClasses","translatePixel","CarouselWrapperContext","elementsDatas","CarouselCurrentSlideContext","CarouselWrapper","datas","currentSize","children","value","useCarouselContext","context","Error","callAll","fns","args","fn","clsx","arg","CarouselElement","rootClassname","elementBoxClassname","elementsData","className","key","data","id","onClick","NextSlideAction","PrevSlideAction","text","color","imageDatas","src","InteractiveExempleForm","props","setProps","useStyletron","css","theme","border","colors","backgroundTertiary","marginRight","padding","width","fontSize","margin","lineHeight","checked","onChange","e","prev","target","labelPlacement","overrides","Root","marginBottom","one","label","caption","clearOnEscape","Element","backgroundColor","InteractiveExemple","useState","display","justifyContent","minWidth","element","language","dracula","slice","length","getInteractiveExempleCode","SlidePagination","max","useCarouselCurrentSlide","numPages","SIZE","mini","currentPage","onPageChange","nextPage","backgroundRepeat","backgroundSize","overflow","height","background","ImageExemple","flexDirection","alignItems","position","left","zIndex","kind","shape","buttonSecondaryFill","borderRadius","right","ExempleWrapper","title","description","borderBottom","styleLevel","white","GithubLogo","viewBox","fill","xmlns","fillRule","clipRule","d","NpmLogo","Exemples","Block","textAlign","href","engine","Styletron","Hello","DarkTheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5410ccfd.chunk.js","sourcesContent":["import * as React from 'react'\nimport { useSimpleCarouselStyles } from './useSimpleCarouselStyles'\nimport { SimpleSliderConfig } from './types'\n\nexport function useSimpleCarousel({\n  listLength,\n  size,\n  reverse,\n  transition\n}: SimpleSliderConfig) {\n  const [currentSlide, setCurrentSlide] = React.useState(0)\n  const classes = useSimpleCarouselStyles({\n    size,\n    currentSlide,\n    reverse,\n    transition\n  })\n\n  const nextSlide = () =>\n    setCurrentSlide((p) => (p + 1 > listLength - 1 ? 0 : p + 1))\n\n  const prevSlide = () =>\n    setCurrentSlide((p) => (p - 1 < 0 ? listLength - 1 : p - 1))\n\n  const setSlide = (slide: number) =>\n    slide >= 0 && slide <= listLength && setCurrentSlide(slide)\n\n  return { nextSlide, prevSlide, setSlide, classes, currentSlide }\n}\n","import * as React from 'react'\nimport { CarouselStylesProps } from './types'\n\n/*\n * Creation of a custom style hook to avoid using a third party library.\n */\nexport function useSimpleCarouselStyles({\n  size,\n  currentSlide,\n  reverse,\n  transition\n}: CarouselStylesProps) {\n  const uniqueId = React.useRef(\n    'slider' + Math.random().toString(36).substr(2, 9)\n  )\n  const style = React.useRef(document.createElement('style'))\n  const classes = React.useRef({\n    card: `${uniqueId.current}-card`,\n    flexBox: `${uniqueId.current}-flexbox`,\n    root: `${uniqueId.current}-root`\n  })\n\n  React.useEffect(() => {\n    const currentStyle = style.current\n    document.getElementsByTagName('head')[0].appendChild(currentStyle)\n    return () => {\n      document.getElementsByTagName('head')[0].removeChild(currentStyle)\n    }\n  }, [])\n\n  React.useEffect(() => {\n    const currentClasses = classes.current\n    const translatePixel = (size.element + size.margin) * currentSlide\n    style.current.innerHTML = `\n.${currentClasses.card} {\n  width: ${size.element}px;\n  margin-${reverse ? 'left' : 'right'}: ${size.margin}px;\n  cursor: pointer;\n}\n\n.${currentClasses.root} {\n  overflow: hidden;\n}\n\n.${currentClasses.flexBox} {\n  transition: ${transition ? transition : 'transform .3s ease-in-out'};\n  transform: translate(${reverse ? '+' : '-'}${translatePixel}px);\n  display: flex;\n  ${reverse ? 'flex-direction: row-reverse' : ''}\n}`\n  }, [classes, currentSlide, size.element, size.margin, reverse, transition])\n\n  return classes.current\n}\n","import React from 'react'\nimport {\n  ElementId,\n  CarouselContextProps,\n  CarouselWrapperProps,\n  CarouselCurrentSlideContextProps\n} from './types'\nimport { useSimpleCarousel } from './useSimpleCarousel'\n\nconst CarouselWrapperContext = React.createContext<CarouselContextProps>({\n  elementsDatas: []\n})\n\ntype CarouselCurrentSlideContextPropsNull = CarouselCurrentSlideContextProps | null\n\nconst CarouselCurrentSlideContext = React.createContext<CarouselCurrentSlideContextPropsNull>(\n  null\n)\n\nexport function CarouselWrapper<T extends ElementId>({\n  datas,\n  currentSize,\n  children,\n  reverse,\n  transition\n}: CarouselWrapperProps<T>) {\n  const {\n    classes,\n    setSlide,\n    nextSlide,\n    prevSlide,\n    currentSlide\n  } = useSimpleCarousel({\n    listLength: datas.length,\n    size: currentSize,\n    reverse,\n    transition\n  })\n\n  const value = React.useMemo(\n    () => ({ nextSlide, prevSlide, classes, setSlide, elementsDatas: datas }),\n    []\n  )\n\n  return (\n    <CarouselWrapperContext.Provider value={value}>\n      <CarouselCurrentSlideContext.Provider value={{ currentSlide }}>\n        {children}\n      </CarouselCurrentSlideContext.Provider>\n    </CarouselWrapperContext.Provider>\n  )\n}\n\nexport const useCarouselContext = () => {\n  const context = React.useContext(CarouselWrapperContext)\n\n  if (!context)\n    throw new Error(\n      'useCarouselContext must be used within CarouselWrapperContext.Provider'\n    )\n  return context\n}\n\nexport const useCarouselCurrentSlide = () => {\n  const context = React.useContext(CarouselCurrentSlideContext)\n\n  if (!context)\n    throw new Error(\n      'You need to set `enableCurrentSlideHook` to true on `CarouselWrapper` to use this hook.'\n    )\n  return context\n}\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: (any | undefined)[]) => (...args: any) =>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  fns.forEach((fn: any) => fn && fn(...args))\n\nexport function clsx(...args: (string | undefined | null)[]): string {\n  return args.filter((arg) => typeof arg === 'string').join(' ')\n}\n","import React from 'react'\nimport { useCarouselContext } from './CarouselWrapper'\nimport './styles.css'\nimport { clsx } from './utils'\n\ntype HorizontalSliderProps = {\n  children: React.ReactElement\n  rootClassname?: string\n  elementBoxClassname?: string\n}\n\nexport function CarouselElement({\n  children,\n  rootClassname,\n  elementBoxClassname\n}: HorizontalSliderProps) {\n  const {\n    elementsDatas: elementsData,\n    classes,\n    setSlide\n  } = useCarouselContext()\n\n  return (\n    <div className={clsx(rootClassname, classes?.root)}>\n      <div className={clsx(classes?.flexBox, elementBoxClassname)}>\n        {elementsData.map((data, i) => (\n          <div key={data.id} onClick={() => setSlide?.(i)}>\n            {React.cloneElement(children, {\n              className: clsx(children.props.className, classes?.card),\n              data\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useCarouselContext } from './CarouselWrapper'\nimport { callAll } from './utils'\n\nexport function NextSlideAction({\n  children\n}: {\n  children: React.ReactElement\n}) {\n  const { nextSlide } = useCarouselContext()\n  return React.cloneElement(children, {\n    onClick: callAll(nextSlide, children.props.onClick)\n  })\n}\n\nexport function PrevSlideAction({\n  children\n}: {\n  children: React.ReactElement\n}) {\n  const { prevSlide } = useCarouselContext()\n  return React.cloneElement(children, {\n    onClick: callAll(prevSlide, children.props.onClick)\n  })\n}\n","export type DatasTypes = { id: number; text: string; color: string }\n\nexport const datas: DatasTypes[] = [\n  { id: 0, text: 'McNab', color: '#9b59b6' },\n  { id: 1, text: 'Pumi', color: '#8e44ad' },\n  { id: 2, text: 'Huntaway', color: '#273c75' },\n  { id: 3, text: 'Koolie', color: '#192a56' },\n  { id: 4, text: 'Kuvasz', color: '#3498db' },\n  { id: 5, text: 'Mudi', color: '#2980b9' },\n  { id: 6, text: 'Biard', color: '#7f8c8d' },\n  { id: 7, text: 'Collies', color: '#95a5a6' },\n  { id: 8, text: 'Tornjak', color: '#34495e' },\n  { id: 9, text: 'Lurcher', color: '#2c3e50' },\n  { id: 10, text: 'Longdog', color: '#e74c3c' },\n  { id: 11, text: 'Hound', color: '#c0392b' },\n  { id: 12, text: 'Lurcher', color: '#d35400' }\n]\n\nexport const imageDatas = [\n  {\n    id: 0,\n    src: 'https://lenews.ch/wp-content/uploads/2016/05/Dogs-at-Nestle.jpg'\n  },\n  {\n    id: 1,\n    src:\n      'https://www.sbb.ch/content/dam/internet/keyvisual/GA-Hund.jpg/_jcr_content/renditions/cq5dam.web.1280.1280.jpeg'\n  },\n  {\n    id: 2,\n    src:\n      'https://fun-dog-garderie.ch/wp-content/uploads/2019/06/Fun-Dog-Garderie-Piscine.jpg'\n  },\n  {\n    id: 3,\n    src:\n      'https://www.sbb.ch/content/dam/internet/keyvisual/Hund.jpg/_jcr_content/renditions/cq5dam.web.1280.1280.jpeg'\n  },\n  {\n    id: 4,\n    src:\n      'https://static.secureholiday.net/static/CMS/photos/000/044/000044323.jpg'\n  }\n]\n","import { useStyletron } from 'baseui'\nimport { Block } from 'baseui/block'\nimport React from 'react'\nimport { FormControl } from 'baseui/form-control'\nimport { Input } from 'baseui/input'\nimport { Checkbox } from 'baseui/checkbox'\n\nexport default function InteractiveExempleForm({\n  props,\n  setProps\n}: {\n  props: {\n    reverse: boolean\n    transition: string\n    one: boolean\n  }\n  setProps: Function\n}) {\n  const [css, theme] = useStyletron()\n\n  return (\n    <Block\n      className={css({\n        border: `1px solid ${theme.colors.backgroundTertiary}`,\n        marginRight: '16px'\n      })}\n      padding='8px'\n      width='100%'>\n      <h6\n        className={css({\n          fontSize: '20px',\n          margin: '0 0 16px 0',\n          lineHeight: 1,\n          color: 'white'\n        })}>\n        Interactive Carousel Settings\n      </h6>\n      <Checkbox\n        checked={props.reverse}\n        onChange={(e: any) =>\n          setProps((prev: any) => ({ ...prev, reverse: e.target.checked }))\n        }\n        labelPlacement='right'\n        overrides={{\n          Root: { style: () => ({ marginBottom: '16px' }) }\n        }}>\n        Enable reverse\n      </Checkbox>\n      <Checkbox\n        checked={props.one}\n        onChange={(e: any) =>\n          setProps((prev: any) => ({ ...prev, one: e.target.checked }))\n        }\n        labelPlacement='right'\n        overrides={{\n          Root: { style: () => ({ marginBottom: '16px' }) }\n        }}>\n        Display only one card\n      </Checkbox>\n      <FormControl\n        label='transition'\n        caption='Transition applied to slide change'>\n        <Input\n          value={props.transition}\n          onChange={(e: any) => {\n            const value = e.target?.value\n            if (!value) return\n            setProps((prev: any) => ({ ...prev, transition: value }))\n          }}\n          clearOnEscape\n        />\n      </FormControl>\n    </Block>\n  )\n}\n","import { Block } from 'baseui/block'\nimport React from 'react'\nimport {\n  CarouselElement,\n  CarouselWrapper,\n  NextSlideAction,\n  PrevSlideAction,\n  SliderElementProps\n} from 'react-clear-carousel'\nimport { datas, DatasTypes } from './datas'\nimport InteractiveExempleForm from './InteractiveExempleForm'\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { dracula } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport getInteractiveExempleCode from './getInteractiveExempleCode'\nimport { useStyletron } from 'baseui'\n\nconst InteractiveExemple = () => {\n  const [props, setProps] = React.useState({\n    reverse: false,\n    transition: 'transform .3s ease-in-out',\n    one: false\n  })\n  const [css, theme] = useStyletron()\n\n  return (\n    <Block>\n      <Block width='100%' display='flex' justifyContent='center'>\n        <InteractiveExempleForm props={props} setProps={setProps} />\n        <Block\n          className={css({\n            border: `1px solid ${theme.colors.backgroundTertiary}`\n          })}\n          minWidth={['200px', '400px', '400px']}>\n          <Block width={props.one ? '116px' : ['200px', '400px', '400px']}>\n            <CarouselWrapper\n              transition={props.transition}\n              reverse={props.reverse}\n              datas={datas}\n              currentSize={{ element: 116, margin: 10 }}>\n              <CarouselElement>\n                <Element />\n              </CarouselElement>\n              <PrevSlideAction>\n                <button>Prev</button>\n              </PrevSlideAction>\n              <NextSlideAction>\n                <button>Next</button>\n              </NextSlideAction>\n            </CarouselWrapper>\n          </Block>\n        </Block>\n      </Block>\n\n      <SyntaxHighlighter language='tsx' style={dracula}>\n        {getInteractiveExempleCode(props)}\n      </SyntaxHighlighter>\n    </Block>\n  )\n}\n\nconst Element = ({ className, data }: SliderElementProps<DatasTypes>) => {\n  return (\n    <div className={className}>\n      <Block backgroundColor={data?.color} color='colorPrimary' padding='8px'>\n        <p>{data?.text}</p>\n      </Block>\n    </div>\n  )\n}\n\nexport default InteractiveExemple\n","export default function getInteractiveExempleCode(props: {\n  reverse: boolean\n  transition: string\n  one: boolean\n}) {\n  return `function Carousel() {\n  return (\n    <div${props.one ? ' style={{ width: 116px }}' : ''}>\n      <CarouselWrapper\n        transition=\"${\n          props.transition.slice(0, 42) +\n          (props.transition.length > 42 ? '...' : '')\n        }\"${props.reverse ? '\\n        reverse' : ''}\n        datas={datas}\n        currentSize={{ element: 116, margin: 10 }}>\n        <CarouselElement>\n          <Element />\n        </CarouselElement>\n        <PrevSlideAction>\n          <button>Prev</button>\n        </PrevSlideAction>\n        <NextSlideAction>\n          <button>Next</button>\n        </NextSlideAction>\n      </CarouselWrapper>\n    </div>\n  )\n};\n\nconst Element = ({ className, data }: SliderElementProps<DatasTypes>) => {\n  return (\n    <div className={className}>\n      <Block backgroundColor={data?.color}>\n        <p>{data?.text}</p>\n      </Block>\n    </div>\n  )\n}`\n}\n","import React from 'react'\nimport { Block } from 'baseui/block'\nimport {\n  CarouselElement,\n  CarouselWrapper,\n  NextSlideAction,\n  PrevSlideAction,\n  SliderElementProps,\n  useCarouselContext,\n  useCarouselCurrentSlide\n} from 'react-clear-carousel'\nimport { useStyletron } from 'baseui'\nimport { Button } from 'baseui/button'\nimport { imageDatas } from './datas'\nimport { ArrowRight, ArrowLeft } from 'baseui/icon'\nimport { Pagination, SIZE } from 'baseui/pagination'\n\nconst ImageExemple = () => {\n  const [css, theme] = useStyletron()\n\n  return (\n    <Block\n      margin='8px'\n      display='flex'\n      flexDirection='column'\n      alignItems='center'>\n      <CarouselWrapper\n        datas={imageDatas}\n        currentSize={{ element: 400, margin: 16 }}>\n        <Block display='flex' alignItems='center'>\n          <PrevSlideAction>\n            <Button\n              overrides={{\n                Root: {\n                  style: () => ({\n                    position: 'relative',\n                    left: '24px',\n                    zIndex: 2\n                  })\n                }\n              }}\n              kind='secondary'\n              shape='circle'\n              children={<ArrowLeft size={32} />}\n            />\n          </PrevSlideAction>\n          <CarouselElement\n            rootClassname={css({\n              width: '400px',\n              border: `2px solid ${theme.colors.buttonSecondaryFill}`,\n              borderRadius: '4px'\n            })}>\n            <Element />\n          </CarouselElement>\n          <NextSlideAction>\n            <Button\n              overrides={{\n                Root: { style: () => ({ position: 'relative', right: '24px' }) }\n              }}\n              kind='secondary'\n              shape='circle'\n              children={<ArrowRight size={32} />}\n            />\n          </NextSlideAction>\n        </Block>\n        <SlidePagination max={imageDatas.length} />\n      </CarouselWrapper>\n    </Block>\n  )\n}\n\nfunction SlidePagination({ max }: { max: number }) {\n  const { currentSlide } = useCarouselCurrentSlide()\n  const { setSlide } = useCarouselContext()\n  return (\n    <Pagination\n      numPages={max}\n      size={SIZE.mini}\n      currentPage={currentSlide + 1}\n      onPageChange={({ nextPage }) => {\n        setSlide(nextPage - 1)\n      }}\n    />\n  )\n}\n\nconst Element = ({\n  className,\n  data\n}: SliderElementProps<{ id: number; src: string }>) => {\n  const [css] = useStyletron()\n\n  return (\n    <div className={className}>\n      <div\n        style={{\n          backgroundRepeat: 'no-repeat',\n          backgroundSize: 'cover'\n        }}\n        className={css({\n          overflow: 'hidden',\n          height: '250px',\n\n          background: `url(${data?.src})`\n        })}\n      />\n    </div>\n  )\n}\n\nexport default ImageExemple\n","import { Block } from 'baseui/block'\nimport { Paragraph1 } from 'baseui/typography'\nimport React from 'react'\nimport { useStyletron } from 'baseui'\nimport { Heading } from 'baseui/heading'\n\ntype ExempleWrapperProps = {\n  title: string\n  description: string\n  children: React.ReactElement\n}\n\nexport default function ExempleWrapper({\n  title,\n  description,\n  children\n}: ExempleWrapperProps) {\n  const [css, theme] = useStyletron()\n\n  return (\n    <Block\n      className={css({\n        borderBottom: `1px solid ${theme.colors.backgroundTertiary}`\n      })}\n      padding={['8px', '8px', '16px', '16px']}\n      display='flex'\n      flexDirection='column'>\n      <Heading\n        styleLevel={3}\n        className={css({\n          margin: '0',\n          fontSize: '32px',\n          color: theme.colors.white\n        })}>\n        {title}\n      </Heading>\n      <Paragraph1>{description}</Paragraph1>\n      <Block display='flex' justifyContent='center'>\n        {children}\n      </Block>\n    </Block>\n  )\n}\n","import React from 'react'\n\nexport default function GithubLogo() {\n  return (\n    <svg\n      width='128'\n      height='128'\n      viewBox='0 0 32 32'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        fillRule='evenodd'\n        clipRule='evenodd'\n        d='M16 0C7.16 0 0 7.16 0 16C0 23.08 4.58 29.06 10.94 31.18C11.74 31.32 12.04 30.84 12.04 30.42C12.04 30.04 12.02 28.78 12.02 27.44C8 28.18 6.96 26.46 6.64 25.56C6.46 25.1 5.68 23.68 5 23.3C4.44 23 3.64 22.26 4.98 22.24C6.24 22.22 7.14 23.4 7.44 23.88C8.88 26.3 11.18 25.62 12.1 25.2C12.24 24.16 12.66 23.46 13.12 23.06C9.56 22.66 5.84 21.28 5.84 15.16C5.84 13.42 6.46 11.98 7.48 10.86C7.32 10.46 6.76 8.82 7.64 6.62C7.64 6.62 8.98 6.2 12.04 8.26C13.32 7.9 14.68 7.72 16.04 7.72C17.4 7.72 18.76 7.9 20.04 8.26C23.1 6.18 24.44 6.62 24.44 6.62C25.32 8.82 24.76 10.46 24.6 10.86C25.62 11.98 26.24 13.4 26.24 15.16C26.24 21.3 22.5 22.66 18.94 23.06C19.52 23.56 20.02 24.52 20.02 26.02C20.02 28.16 20 29.88 20 30.42C20 30.84 20.3 31.34 21.1 31.18C24.2763 30.1077 27.0363 28.0664 28.9917 25.3432C30.947 22.6201 31.9991 19.3524 32 16C32 7.16 24.84 0 16 0Z'\n        fill='white'\n      />\n    </svg>\n  )\n}\n","import React from 'react'\n\nexport default function NpmLogo({\n  width,\n  height\n}: {\n  width?: number\n  height?: number\n}) {\n  return (\n    <svg\n      width='128'\n      height='41'\n      viewBox='0 0 180 58'\n      fill='none'\n      xmlns='http://www.w3.org/2000/svg'>\n      <path\n        d='M55.3846 57.69H78.4615V46.152H101.538V0H55.3846V57.69ZM78.4615 11.538H90V34.614H78.4615V11.538ZM110.769 0V46.152H133.846V11.538H145.385V46.152H156.923V11.538H168.462V46.152H180V0H110.769ZM0 46.152H23.0769V11.538H34.6154V46.152H46.1538V0H0V46.152Z'\n        fill='white'\n      />\n    </svg>\n  )\n}\n","import React from 'react'\nimport { Block } from 'baseui/block'\nimport { Heading, HeadingLevel } from 'baseui/heading'\nimport { StyledLink } from 'baseui/link'\nimport InteractiveExemple from './exemples/InteractiveExemple'\nimport ImageExemple from './exemples/ImageExemple'\nimport ExempleWrapper from './exemples/ExempleWrapper'\nimport { Paragraph2 } from 'baseui/typography'\nimport GithubLogo from './logo/GithubLogo'\nimport NpmLogo from './logo/NpmLogo'\n\nexport default function Exemples() {\n  return (\n    <Block\n      margin='auto'\n      display='flex'\n      flexDirection='column'\n      height='100%'\n      width={['100%', '100%', '1000px', '1000px']}>\n      <HeadingLevel>\n        <Heading\n          overrides={{\n            Block: {\n              style: () => ({ margin: '0 0 16px 0', textAlign: 'center' })\n            }\n          }}>\n          react-clear-carousel\n        </Heading>\n        <Block\n          marginBottom={'16px'}\n          display='flex'\n          flexDirection='column'\n          alignItems='center'>\n          <Paragraph2>Clear carousel easy to integrate.</Paragraph2>\n          <Block display='flex' alignItems='center'>\n            <StyledLink\n              className='big-link-margin'\n              href='https://github.com/Melvynx/react-clear-carousel'>\n              <GithubLogo />\n            </StyledLink>\n            <StyledLink\n              className='big-link-margin'\n              href='https://www.npmjs.com/package/react-clear-carousel'>\n              <NpmLogo />\n            </StyledLink>\n          </Block>\n        </Block>\n        <ExempleWrapper\n          title='Interactive example'\n          description='Few codes are needed to have a nice result. Here is an interactive example to try different props.'>\n          <InteractiveExemple />\n        </ExempleWrapper>\n        <ExempleWrapper\n          title='Customization example'\n          description='Customization is simple. The index of the slide displayed is easily accessible.'>\n          <ImageExemple />\n        </ExempleWrapper>\n      </HeadingLevel>\n    </Block>\n  )\n}\n","import React from 'react'\nimport { Client as Styletron } from 'styletron-engine-atomic'\nimport { Provider as StyletronProvider } from 'styletron-react'\nimport { DarkTheme, BaseProvider } from 'baseui'\nimport Exemples from './Exemples'\nimport { Block } from 'baseui/block'\n\nconst engine = new Styletron()\n\nexport default function Hello() {\n  return (\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={DarkTheme}>\n        <Block\n          backgroundColor='backgroundPrimary'\n          display='flex'\n          padding={['8px', '16px', '32px']}>\n          <Exemples />\n        </Block>\n      </BaseProvider>\n    </StyletronProvider>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}